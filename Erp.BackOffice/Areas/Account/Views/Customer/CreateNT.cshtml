@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Account.Models
@using Erp.BackOffice.Staff.Models
@model CustomerNTViewModel

@{
        ViewBag.Title = Wording.PageCreate_Staffs;

        Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
        Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
        {
            ModuleName = "Customer",
            ActionName = "CreateNT",
            PageTitle = ViewBag.Title,
            DisplaySearchPanel = false,
            IsPopup = false,
            DisplayBackButton = Request["IsPopup"] == null ? true : false,
    };
        //IEnumerable<SelectListItem> BranchList = Erp.BackOffice.Helpers.SelectListHelper.GetSelectList_BranchAllNew(null, Wording.Empty);
        //List<BranchViewModel> departmentList = (List<BranchViewModel>)ViewBag.departmentList;
        ViewData["DrugStore"] ="";
}

@section HeadOfPage {
    @Html.ScriptTop_DatePicker()
    @Html.ScriptTop_ChosenStyle()
    <style type="text/css">
    </style>
}

@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "CreateNT", "Customer", null, FormMethod.Post, new { id = "Create", @class = "form-horizontal clearfix", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Image)
    @Html.HiddenFor(model => model.CustomerType)
    <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
    <div class="tabbable" style="margin-bottom:50px;" >
        <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="myTab">
            <li class="active" id="li-tab1">
                <a data-toggle="tab" href="#tab1">@Wording.PersonalInfo</a>
            </li>

            <li id="li-tab2">
                <a data-toggle="tab" href="#tab2">@Wording.ResidenceInfo</a>
            </li>
            <li>
                <a data-toggle="tab" href="#tab4">@Wording.LoginInformation</a>
            </li>
            <li>
                <a data-toggle="tab" href="#tab5">Phân quyền quản lý</a>
            </li>
        </ul>

        <div class="tab-content clear-fix">
            <div id="tab1" class="tab-pane active">
                <div class="row">
                    <div class="col-sm-7">
                        @Html.CustomTextboxFor(model => model.FirstName, null, null, WidthType.span12, true)
                        @Html.CustomTextboxFor(model => model.LastName, null, null, WidthType.span12, true)
                        @Html.DateInput(model => model.Birthday, "dd/MM/yyyy", "99/99/9999", true, WidthType.span12)
                        @Html.CustomDropDownListFor(model => model.Gender, SelectListHelper.GetSelectList_Gender(null), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @*@Html.CustomDropDownListFor(model => model.Ethnic, SelectListHelper.GetSelectList_Category("ethnic", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @Html.CustomDropDownListFor(model => model.Religion, SelectListHelper.GetSelectList_Category("religion", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @Html.CustomDropDownListFor(model => model.CountryId, SelectListHelper.GetSelectList_Category("country", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)
                        @Html.CustomDropDownListFor(model => model.MaritalStatus, SelectListHelper.GetSelectList_Category("MaritalStatus", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)*@
                        @Html.CustomTextboxFor(model => model.IdCardNumber, null, null, WidthType.span12, true)
                        @Html.DateInput(model => model.IdCardDate, "dd/MM/yyyy", "99/99/9999", true, WidthType.span12)
                        @Html.CustomDropDownListFor(model => model.IdCardIssued, SelectListHelper.GetSelectList_Location("0", null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                    </div>
                    <div class="col-sm-5">
                        <div class="wrap-btn-upload">
                            <a class="btn btn-primary btn-sm"><i class="fa fa-upload"></i><span>Tải hình mới</span></a>
                            <input type="file" id="file-image" name="file-image" class="file-image" onchange="previewFileImage(event, '#display-image img')" />
                        </div>
                        <div class="text-center" id="display-image">
                            <img src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Model.Image, "Image_CustomerNT", "user"))" width="250" height="300" title="@Model.CompanyName" id="" />
                        </div>
                    </div>
                </div>
                </div>
            <div id="tab2" class="tab-pane">
                @Html.CustomDropDownListFor(model => model.CityId, SelectListHelper.GetSelectList_Location("0", Model.CityId, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                @Html.CustomDropDownListFor(model => model.DistrictId, SelectListHelper.GetSelectList_Location(null, null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                @Html.CustomDropDownListFor(model => model.WardId, SelectListHelper.GetSelectList_Location(null, null, Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                @Html.CustomTextboxFor(model => model.Address, null, null, WidthType.span12, true)
                @Html.CustomTextboxFor(model => model.Phone, null,null, WidthType.span12, true)
                @Html.CustomTextboxFor(model => model.Email, null, null, WidthType.span12, true)
            </div>
            <div id="tab4" class="tab-pane">
                @Html.CustomDropDownListFor(model => model.PositionCode, SelectListHelper.GetSelectList_Category("Customer_PositionCode", null, "Value", Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleDefault)
                    @Html.CustomTextboxFor(model => model.UserName, null, null, WidthType.span12)
                <div class="control-group form-group">
                    @Html.LabelFor(model => model.Password, new { @class = "col-lg-5 col-md-4 col-sm-4 control-label no-padding-right" })
                    <div class="control-value col-lg-7 col-md-8 col-sm-8">
                        @Html.PasswordFor(model => model.Password, new { @class = "col-sm-12" })
                        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "help-inline" })
                    </div>
                </div>

                <div class="control-group form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-lg-5 col-md-4 col-sm-4 control-label no-padding-right" })
                    <div class="control-value col-lg-7 col-md-8 col-sm-8">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "col-sm-12" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "help-inline" })
                    </div>
                </div>

            </div>
            <div id="tab5" class="tab-pane">
                @if (Erp.BackOffice.Filters.SecurityFilter.IsAdminDrugStore() || Erp.BackOffice.Filters.SecurityFilter.IsStaffDrugStore())
                {
                    <div class="control-group form-group">
                        <label class="col-lg-5 col-md-4 col-sm-4 control-label no-padding-right">Nhà thuốc</label>
                        <div class="control-value col-lg-7 col-md-8 col-sm-8">
                            <input type="hidden" value="@Erp.BackOffice.Helpers.Common.CurrentUser.DrugStore" name="DrugStore" id="DrugStore" />
                            <input type="text" value="@Erp.BackOffice.Helpers.Common.CurrentUser.DrugStoreName" name="DrugStoreName" id="DrugStoreName" readonly="readonly" />
                        </div>
                    </div>
                 
                }
                else
                {
                @Html.Partial("_SearchDrugStore", ViewData["DrugStore"])
                }
            </div>
        </div>
    </div>

    using (Html.BeginButtonContainer(pageSetting))
    {
        <button id="btnSave" type="submit" class="btn btn-primary btn-mini" name="Submit" value="Save" onclick="return FormSubmit()">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    <script type="text/javascript">

        var url = '/api/BackOfficeServiceAPI/FetchLocation';
        var districts = $('#DistrictId'); // cache it
        var ward = $('#WardId');
        $("#CityId").change(function () {
            ShowLoading();
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            $.getJSON(url, { parentId: id }, function (response) {
                districts.empty(); // remove any existing options
                ward.empty();
                $(document.createElement('option'))
                        .attr('value', '')
                        .text('- Rỗng -')
                        .appendTo(ward).trigger('chosen:updated');
                $(response).each(function () {
                    $(document.createElement('option'))
                        .attr('value', this.Id)
                        .text(capitalizeFirstAllWords(this.Name.toLowerCase().replace('huyện', '').replace('quận', '')))
                        .appendTo(districts).trigger('chosen:updated');
                    HideLoading();
                });
            });
        });
        $("#DistrictId").change(function () {
            ShowLoading();
            var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
            $.getJSON(url, { parentId: id }, function (response) {
                ward.empty(); // remove any existing options
                $(response).each(function () {
                    $(document.createElement('option'))
                        .attr('value', this.Id)
                        .text(capitalizeFirstAllWords(this.Name.toLowerCase()))
                        .appendTo(ward).trigger('chosen:updated');
                    HideLoading();
                });
            });
        });
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.CompanyName</option>';
                window.parent.ClosePopupAndReloadPageStaffDetail();
                window.parent.ClosePopupAndAppendSelect(option);
            }
        });
      

        function FormSubmit() {
            if ($("#FirstName").val() == "" || $("#LastName").val() == "" || $("#Gender").val() == "") {
                ShowTab(1);
                return true;
            }
            else
                if ($("#Phone").val() == "" || $("#Email").val()=="") {
                    ShowTab(2);
                    return true;
                }
                //else
                //    if ($("#Sale_BranchId").val() == "")
                //    {
                //        ShowTab(3);
                //        return true;
                //    }

            return true;
        }

        function ShowTab(n) {
            $(".tab-pane").removeClass("active");
            $("#tab" + n).addClass("active");

            $("#myTab li").removeClass("active");
            $("#li-tab" + n).addClass("active");
        }
    </script>
    @Html.ScriptBottom_ValidationMvc()
@Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()


    @Html.ScriptBottom_RequireEitherInput()
    @Html.ScriptBottom_InputMask()
}


