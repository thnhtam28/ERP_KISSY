@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Helpers
@using Erp.BackOffice.Crm.Models

@model SMSLogViewModel
@{
    ViewBag.Title = Wording.PageEdit_SMSLog;

    Layout = "~/Views/Shared/" + (Request["IsPopup"] == null ? "ACE_AdminLayout.cshtml" : "_PopupLayout.cshtml");
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "SMSLog",
        ActionName = "Edit",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = false,
        IsPopup = false,
        DisplayBackButton = false
    };
}


@section HeadOfPage {

    @Html.ScriptTop_ChosenStyle()

}
 
@using (Html.BeginPageHeaderContainer(pageSetting))
{

}
@using (Html.BeginForm_AceStyle((string)ViewBag.Title, "Edit", "SMSLog", null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedUserId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.TargetID)
    @Html.HiddenFor(model => model.TargetModule)

    @Html.ModulePopupFor(m => m.CustomerID, "Customer", Model.Customer, false, true)
    @Html.CustomTextboxFor(model => model.Phone, null, null, WidthType.span12, true);
    @Html.CustomTextboxFor(model => model.Body, null, null, WidthType.span12, true);
     @*<textarea class="ckeditor" cols="30" id="Content" name="Content" placeholder="" rows="2">@Model.Body</textarea>*@
    @Html.DatePicker(model => model.SentDate, "dd/MM/yyyy", "99/99/9999", true, true, "control-label col-lg-5 col-md-4 col-sm-4", "col-lg-7 col-md-8 col-sm-8", "col-xs-12")
    @Html.CustomDropDownListFor(model => model.Status, SelectListHelper.GetSelectList_Category("Status_SMSLog", null, "Value",Wording.Empty), WidthType.span12, true, null, DropdownListStyle.DropdownListStyleChosen)

    using (Html.BeginButtonContainer(pageSetting))
    {
       <input type="hidden" name="UrlReferrerEdit" value="@Request.UrlReferrer" />
        <input type="hidden" value="@Request["IsPopup"]" name="IsPopup" />
        <button class="btn btn-mini btn-primary" type="submit" name="Submit" value="Save">
            <i class="ace-icon fa fa-save"></i>
            @Wording.Save
        </button>
    }
}

@section Scripts {
    <script>
   var urlRefer = '@ViewBag.urlRefer';
        //truyền từ action create của controller qua khi thực hiện submit và return về lại view create, để nhận biết là được gọi theo dạng popup
        var closePopup = '@ViewBag.closePopup';
        $(document).ready(function () {
            //nếu là được gọi theo dạng popup từ form khác thì chạy đoạn code bên dưới
            if (closePopup != '') {
                var option = '<option value="@Model.Id" >@Model.Body</option>';
                //tên funtion có thể khác theo từng công việc riêng (đây chỉ là mẫu khi thêm mới sẽ gọi lại)
                //nếu có url thì gọi hàm này để trang ngoài iframe nhảy trang
                if (urlRefer != '') {
                    window.parent.ClosePopupAndRedirectToURL(urlRefer);
                }
                window.parent.ClosePopupAndDoSomething(option);
            }
        });
       $(document).ready(function () {
           $('[data-rel="tooltip"]').tooltip({ container: 'body' });

       });
       var url = '/api/BackOfficeServiceAPI/FetchCustomerPhone';
       var phone = $('#Phone'); // cache it

       $("#CustomerID").change(function () {
           var id = $(this).val(); // Use $(this) so you don't traverse the DOM again
           $.getJSON(url, { CustomerID: id }, function (response) {
               phone.val(response);
               phone.text(response);
           });

       });

       function initCkeditor() {
           $('.ckeditor').ckeditor({
               "extraPlugins": 'imagebrowser',
               "imageBrowser_listUrl": "@Url.Action("ListJson","Images")",
               // Define the toolbar groups as it is a more accessible solution.
               toolbarGroups: [
                   { "name": "document", "groups": ["mode", "document", "doctools"] },
                   { "name": "editing", "groups": ["find", "selection", "spellchecker"] },
                   { "name": "forms" },
                   { "name": "tools" },
                   { "name": "basicstyles", "groups": ["basicstyles", "cleanup"] },
                   { "name": "clipboard", "groups": ["clipboar", "undo"] },
                   { "name": "links", "groups": ["links"] },
                   { "name": "paragraph", "groups": ["list", "blocks"] },
                   { "name": "insert", "groups": ["insert"] },
                   { "name": "styles", "groups": ["styles"] },
                   //{ "name": "about", "groups": ["about"] },
                   { "name": "styles" },
                   { "name": "colors" },
                   { "name": "align", "groups": ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'] }

               ],
           // Remove the redundant buttons from toolbar groups defined above.
           removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Styles,Specialchar'
       });
       }
    </script>

    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/mm/yyyy")
    @Html.ScriptBottom_ChosenStyle()
}




