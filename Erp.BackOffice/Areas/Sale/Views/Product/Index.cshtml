@model IEnumerable<ProductViewModel>

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Sale.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html

@{
    ViewBag.Title = Wording.PageIndex_Product;
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "Product",
        ActionName = "Index",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false,
        AdvancedSearch = false,
        SearchOjectAttr = ViewBag.ListOjectAttrSearch
    };
    int rowNumber = ViewBag.Tongdong;

    int numberOfItem = ViewBag.AmountPage;
    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    //if(Request["grid-page"] == null)
    //{
    //    currentPage = 1;
    //}
    //else
    //{
    //    currentPage = Convert.ToInt32(Request["trang"]);
    //}
    int tongPage = (rowNumber / numberOfItem) + 1;
    var top1 = "";
    string Status = Request["Status"] != null ? Request["Status"] : "";
    var url = Request.Url;
    int sopage = ViewBag.AmountPage;
}
<style>
    .wrap {
        overflow: hidden;
    }

    #hdCTable {
        z-index: 2;
    }

    .ListBarCode {
        width: auto;
        height: 400px;
        overflow: auto;
    }

    #ExportForm {
        width: 100%;
    }

    .grid-container {
        display: grid;
        grid-template-columns: auto auto auto;
        padding: 10px;
        width: 60%;
    }

    .grid-item {
        background-color: rgba(255, 255, 255, 0.8);
        border: 1px solid rgba(0, 0, 0, 0.8);
        padding: 20px;
        text-align: center;
        border: none;
    }

    #txtSearch {
        width: 40%;
    }

    .pagination {
        margin-top: 14px;
        margin-right: 5px;
    }
</style>
<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>
@helper GridColumnCommand(int id)
{
if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "Product", "Sale"))
{
        <div class="hidden-phone visible-desktop action-buttons" style="display: inline-block; float: left;">
            <button name="Delete" value="Delete" type="submit" class="btn btn-minier btn-danger">
                <i class="ace-icon fa fa-trash"></i>
            </button>
        </div>
}

}


@helper GridColumnCommandImage(string Image)
{
    <div>
        <div class="ace-thumbnails">
            <a href="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Image,"product-image-folder","product"))" title="" data-rel="colorbox" class="cboxElement">
                <img style="margin-left:30px;" id="myImg" alt="" src="@(Erp.BackOffice.Helpers.Common.KiemTraTonTaiHinhAnh(Image,"product-image-folder", "product"))">
            </a>
        </div>
    </div>
}

@helper GridColumnName(string productCode, string name, int id, string categoryCode, string unit)
{
/**/

name = string.IsNullOrEmpty(name) ? "No Title" : name;
    <a href="@Url.Action("Edit", "Product", new { Id = id,IsPopup="true"})"><b>@name</b>   </a>
    <br />
if (!string.IsNullOrEmpty(unit))
{
        <span>@unit</span>
}

}

@helper GridColumnCategoryCode(string productCode, string categoryCode)
{
/**/



    <p style="font-size:16px">@categoryCode</p>
}


@helper GridColumnSize(string productSize)
{


    <p style="font-size:16px">
        @productSize
    </p>
}


@helper GridColumnColor(string productColor)
{

    <p style="font-size:16px">
        @productColor
    </p>

}

@helper GridColumnCategoryValue(object value)
{
/**/

var attr = Erp.BackOffice.Helpers.Common.GetCategoryByValueOrId("value", value);
    <span>@(attr != null ? attr.Name : "")</span>
}
@helper CheckCodeColumns(string Code)
{
/**/
var attr = Erp.BackOffice.Helpers.Common.GetCode(Code, 3);
    @*<input class="ace" type="text" name="checkbox-Code" value="@Code">*@

}
@helper CheckDeleteColumns(int Id)
{
/**/
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
/**/
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
/**/
}

@using (Html.BeginPageHeaderContainer(pageSetting))
{
    <p>
        @*@Html.TextBox("txtCode", Request["txtCode"], new { @class = "", autocomplete = "off", placeholder = "Mã sản phẩm" })*@
        @Html.TextBox("txtSearch", Request["txtSearch"], new { @class = "", autocomplete = "off", placeholder = "Tìm sản phẩm ... " })
        @Html.DropDownList("NHOMSANPHAM_ID", SelectListHelper.GetSelectList_NhomSP("NHOMSANPHAM_ID", Request["CategoryCode"]), "Danh mục", new Dictionary<string, object> { { "class", "" }, { "data-val-required", "Bắt buộc chọn." } })
        @*@Html.DropDownList("LOAISANPHAM_ID", SelectListHelper.GetSelectList_LoaiSP("LOAISANPHAM_ID", Request["LOAISANPHAM_ID"]), "Loại sản phẩm", new Dictionary<string, object> { { "class", "" }, { "data-val-required", "Bắt buộc chọn." } })*@
        @*@Html.TextBox("txtMinPrice", Request["txtMinPrice"], new { @class = "form-control", autocomplete = "off", placeholder = "Giá thấp nhất..." })
            @Html.TextBox("txtMaxPrice", Request["txtMaxPrice"], new { @class = "form-control", autocomplete = "off", placeholder = "Giá cao nhất..." })*@
        @*<span class="input-numberic input-group">
                @Html.TextBox("txtMinPrice", Request["txtMinPrice"] != null ? Request["txtMinPrice"] : "", new { @class = "form-control input-numberic", autocomplete = "off", placeholder = "Giá thấp nhất..." })
                <span class="input-group-addon">
                    <i class="fa fa-exchange"></i>
                </span>
                @Html.TextBox("txtMaxPrice", Request["txtMaxPrice"] != null ? Request["txtMaxPrice"] : "", new { @class = "form-control input-numberic", autocomplete = "off", placeholder = "Giá cao nhất..." })
            </span>*@
        @Html.TextBox("numberrowpage", Request["numberrowpage"], new { @class = "", id = "numberrowpage", style = "display: none" })
    </p>
}
@Html.TextBox("numberrowpage", Request["numberrowpage"], new { @class = "", id = "numberrowpage1", onchange = "myFunction()", autocomplete = "off", style = "display: none", placeholder = numberOfItem })

@if (ViewBag.errors != null && ViewBag.errors != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.errors
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

<div class="AllBtn" style="margin-bottom:10px;">
    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "Product", "Sale"))
    {
        <a class="btn btn-mini btn-primary" href="@Url.Action("Create", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-plus"></i>
            @Wording.CreateNew
        </a>
    }



    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("SuaDonGia", "Product", "Sale"))
    {
        <a class="btn btn-info btn-mini" href="@Url.Action("SuaDonGia", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-edit"></i>
            Sửa Đơn Giá Nhanh
        </a>
    }

    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("FeedFacebook", "Product", "Sale"))
    {
        <button type="submit" name="Feed" value="FeedGoogle" class="btn btn-mini btn-danger" onclick="return CheckIsval();">
            <i class="fa fa-google-plus-circle"></i>
            Tạo Feed Google

        </button>
    }


    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("FeedGoogle", "Product", "Sale"))
    {

        <button type="submit" name="Feed" value="FeedFacebook" class="btn btn-mini btn-danger" onclick="return CheckIsval();">

            <i class="fa fa-facebook-f"></i>
            Tạo Feed Facebook
        </button>
    }
    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("NewProduct", "Product", "Sale"))
    {
        <a class="btn btn-mini btn-success" href="@Url.Action("NewProduct", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-plus"></i>
            Sản phẩm mới
        </a>
    }
    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("HotProduct", "Product", "Sale"))
    {
        <a class="btn btn-mini btn-primary" href="@Url.Action("HotProduct", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-plus"></i>
            Sản phẩm hot
        </a>
    }
    @*<button type="button" id="btnGet" class="btn btn-mini btn-info">
            In mã vạch
        </button>*@
    <a class="btn btn-mini btn-info" href="@Url.Action("PrintBarCode", pageSetting.ModuleName, new { Id = 0 , source = "no" })">
        <i class="ace-icon fa fa-barcode"></i>
        In mã vạch
    </a>


    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("ImportFile", "Product", "Sale"))
    {
        @*onclick="OpenPopup('/Product/ImportFile?IsPopup=True', 'Nhập excel', 0, 0);"*@
        <a class="btn btn-mini btn-white btn-success btn-sm" href="@Url.Action("ImportFile", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-file-excel-o"></i>
            Nhập Excel
        </a>
    }


    @if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("ExportExcel", "Product", "Sale"))
    {
        <a class="btn btn-mini btn-white btn-success btn-sm" href="@Url.Action("ExportExcel", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-file-excel-o"></i>
            Xuất Excel
        </a>
    }
    @Html.CheckBox("isALL", true) Xuất tất cả SP
</div>
<p>Tổng số: <b>@Erp.BackOffice.Helpers.Common.PhanCachHangNgan(Model.Count())</b></p>

@using (Html.BeginForm("Delete", "Product", FormMethod.Post, new
{
    id = "form",
    @class = "no_show_loading inline"@*, target = "_blank"*@                                                                                                        /**/
                                                                                                            /**/
                                                                                                            /**/
                                                                                                            ,
}))
{

    <div class="table-responsive" id="Product">

        <div id="test">
            @Html.Grid(Model).Columns(columns =>
       {
           columns.Add(u => u.Image_Pos).Titled("Ảnh POS").SetWidth(60).Sanitized(false).Encoded(false).RenderValueAs(n => GridColumnCommandImage(n.Image_Pos));
           columns.Add().Titled(BuildCheckAll().ToHtmlString()).SetWidth(0).Sanitized(false).Encoded(false).RenderValueAs(n => CheckDeleteColumns(n.Id));
           columns.Add(u => u.Code).Titled(Wording.ProductCode).SetWidth(100);
           columns.Add().Titled(Wording.Name).SetWidth(100).Sortable(false).Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnName(u.Code, u.Name, u.Id, u.CategoryCode, u.Unit));
           columns.Add().Titled("Giá bán").Sortable(false).Sanitized(false).Encoded(false).SetWidth(100).RenderValueAs(u => u.PriceOutbound.ToCurrencyStr(null)).Css("text-right");
           columns.Add(u => u.CategoryCode).Titled("Danh mục").SetWidth(200).Sanitized(false).Encoded(false).RenderValueAs(n => GridColumnCategoryCode(n.Code, n.ProductGroupName));
           columns.Add(u => u.Size).Titled("Kích cỡ").SetWidth(80).Sanitized(false).Encoded(false).RenderValueAs(n => GridColumnSize(n.Size));
           columns.Add(u => u.Color_product).Titled("Màu").SetWidth(80).Sanitized(false).Encoded(false).RenderValueAs(n => GridColumnColor(n.Color_product));
           columns.Add().Titled(Wording.PriceInbound).Sortable(false).Sanitized(false).Encoded(false).SetWidth(100).RenderValueAs(u => u.PriceInbound.ToCurrencyStr(null)).Css("text-right");
           columns.Add(u => u.CreatedDate).Titled(Wording.CreatedDate).SetWidth(130).Format("{0:dd/MM/yyyy HH:mm}");
           columns.Add(u => u.ModifiedDate).Titled(Wording.ModifiedDate).SetWidth(130).Sortable(true).Format("{0:dd/MM/yyyy HH:mm}");
           columns.Add(u => u.Id).Titled("Xóa").Sanitized(false).Encoded(false).RenderValueAs(u => GridColumnCommand(u.Id)).SetWidth(50);
       }).WithPaging(sopage)
        </div>
        <div class="container" style="margin-top: 6px;width: auto;background-color: #eff3f8;height: 60px;">

            <div>
                <div style="float:right;margin-right:20px;margin-top:14px">
                    <label>Trang</label>
                    <input id="trang" name="trang" type="text" style="width :50px; height: 27px" placeholder="@currentPage/@tongPage" />
                    <label>Số dòng</label>
                    <input id='SoTrang11' style="width :30px; height: 27px;border: 1px solid #D5D5D5" placeholder="@numberOfItem" />
                </div>

            </div>
        </div>
    </div>
    using (Html.BeginButtonContainer(pageSetting))
    {
        if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Delete", "Product", "Sale"))
        {
            <button class="btn btn-mini btn-danger" type="submit" name="DeleteAll" value="DeleteAll" onclick="return CheckIsval();">
                <i class="ace-icon fa fa-trash"></i>
                @Wording.Delete
            </button>
        }
    }

}


<script>

    $('#test').find('table.table.table-striped.grid-table').first().attr('id', 'CTable');
    $('#test').find('table.table.table-striped.grid-table thead').first().attr('id', 'CTh');

</script>

<script src="~/Scripts/jquery.floatThead.js"></script>

<script>
    $(document).ready(function () {
        $("#CTable").floatThead({ top: 30 });
    });
</script>
<div class="wrap">
    <div class="ListBarCode">
        <div id="seleted-rows" class="grid-container">

        </div>
    </div>
</div>




@section Scripts {
    @*<script src="~/assets/js/print.min.js"></script>*@
    <script src="~/assets/js/jQuery.print.min.js"></script>
    <script src="~/assets/js/JsBarcode.all.min.js"></script>
    <script>
        $(".grid-footer").css({ "float": "right", "width": "auto" });
    </script>
    <script type="text/javascript">
        function myFunction() {
            var x = document.getElementById("numberrowpage1").value;
            document.getElementById("numberrowpage").value = x;
            setCookie("NUMBERROW_INVOICE_CookieName", x, 100);
        }
    </script>
    <script type="text/javascript">
        function CheckIsval() {

        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })

    </script>
    <script type="text/javascript">
        //Bind keypress event to textbox
        $('#trang').keypress(function(event){
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                var x = document.getElementById('trang').value;
                var url = window.location.href;

                if (url.includes("?grid-page=" +@currentPage) || url.includes("&grid-page=" +@currentPage)) {
                    var url = url.replace("grid-page=" +@currentPage, "grid-page=" + x);
                }
                else {
                    if (!url.includes("grid-page=") && url.includes("?")) {
                        var url = url + "&grid-page=" + x;
                    }
                    else {
                        var url = url + "?grid-page=" + x;
                    }
                }
                window.location.href = url;
            }

        });
        $('#SoTrang11').keypress(function(event){
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                var SoTrang11 = $("#SoTrang11").val();

                $("#SoTrang11").val(SoTrang11);
                $('#numberrowpage1').val(SoTrang11);
                $('#numberrowpage').val(SoTrang11);
                $('#numberrowpage1').trigger('change');
                $('#numberrowpage').trigger('change');
                location.reload();
            }

        });
        $(document).ready(function () {

            var strVal = getCookie("NUMBERROW_INVOICE_CookieName");
            //alert(strVal);
            $('#numberrowpage').val(strVal);
            $('#numberrowpage1').val(strVal);



        });
        function CheckIsval() {
            if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        $('#form').on('keyup keypress', function (e) {
            var keyCode = e.keyCode || e.which;
            if (keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });
        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })
        //$('#SoTrang1').keyup(function (e) {
        //    var SoTrang1 = $("#SoTrang1").val();

        //  $("#SoTrang1").val(SoTrang1);
        //    $('#numberrowpage1').val(SoTrang1);
        //   $('#numberrowpage').val(SoTrang1);
        //   $('#numberrowpage1').trigger('change');
        //    $('#numberrowpage').trigger('change');
        //    location.reload();
        //});
    </script>
    <script>
        //$(document).ready(function () {

        //    var tmp = [];

        //    $("#Product TBODY TR td label input[name='DeleteId-checkbox']").change(function () {
        //        var checked = {};
        //        checked = $(this).attr('id');

        //        if ($(this).is(':checked')) {
        //            $("#Print").append($(checked).text());
        //            tmp.push(checked);
        //            console.log(tmp);
        //        } else {
        //            tmp.splice($.inArray(checked, tmp), 1);
        //        }
        //    });
        //    $('#btnGet').click(function () {





        //    });

        //});

        //$(":checkbox").on("click", function () {
        //    if ($(this).is(":checked")) {
        //        $(this).closest("td").siblings("td:eq(0)").each(function () {
        //            //var checked_code = $(this).text();
        //            //console.log(checked);
        //            $("#seleted-rows").append('<div class="grid-item"><svg id="code' + $(this).text() + '"></svg></div>');
        //            JsBarcode("#code" + $(this).text(), $(this).text());
        //        });

        //    }
        //    else {
        //        //e.preventDefault();
        //        //$(this).parent().remove();
        //        $("#seleted-rows").html("");
        //        $(":checkbox:checked").closest("td").siblings("td:eq(0)").each(function () {
        //            //var checked_code = $(this).text();
        //            $("#seleted-rows").append('<div class="grid-item"><svg id="code' + $(this).text() + '"></svg></div>');
        //            JsBarcode("#code" + $(this).text(), $(this).text());
        //        });
        //    }

        //})
        //$("#Product TBODY TR td label input[name='DeleteId-checkbox']").change(function () {
        //    checked = $(this).attr('id');


        //    if ($(this).is(':checked')) {
        //        $("#seleted-rows").append('<svg id="eat' + checked + '"></svg>');
        //        //tmp.push(checked);
        //        //console.log(tmp);
        //    } else {
        //        $("#seleted-rows").html("");
        //        //$("#seleted-rows").append(checked);
        //        $(":checkbox:checked").closest("svg").siblings("svg").each(function () {
        //            $("#seleted-rows").append($(this).text());
        //        });
        //        //tmp.splice($.inArray(checked, tmp), 1);
        //    }
        //       JsBarcode("#eat" + checked, checked);
        //});

        //}
        //else {

        //    }

        //$('#btnGet').click(function () {
        //    $("#seleted-rows").print();

        //});



    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_ChosenStyle()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
}
