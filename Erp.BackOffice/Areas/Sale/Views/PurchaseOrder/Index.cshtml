
@model IEnumerable<PurchaseOrderViewModel>

@using Erp.BackOffice.App_GlobalResources
@using Erp.BackOffice.Sale.Models
@using Erp.BackOffice.Helpers
@using GridMvc.Html

@{
    ViewBag.Title = Wording.PageIndex_PurchaseOrder;
    Layout = "~/Views/Shared/ACE_AdminLayout.cshtml";
    Erp.BackOffice.Models.PageSetting pageSetting = new Erp.BackOffice.Models.PageSetting
    {
        ModuleName = "PurchaseOrder",
        ActionName = "Index",
        PageTitle = ViewBag.Title,
        DisplaySearchPanel = true,
        IsPopup = false,
        DisplayBackButton = false
    };
    IEnumerable<SelectListItem> warehouseList = (IEnumerable<SelectListItem>)ViewBag.warehouseList;
    int rowNumber = ViewBag.Tongdong;
    int stt = 0;
    int numberOfItem = ViewBag.AmountPage;
    int currentPage = Request["grid-page"] != null ? Convert.ToInt32(Request["grid-page"]) : 1;
    //if(Request["grid-page"] == null)
    //{
    //    currentPage = 1;
    //}
    //else
    //{
    //    currentPage = Convert.ToInt32(Request["trang"]);
    //}
    int tongPage = (rowNumber / numberOfItem) + 1;
    var top1 = "";
    string Status = Request["Status"] != null ? Request["Status"] : "";
    var url = Request.Url;
    int sopage = ViewBag.AmountPage;
}

<style type="text/css">
    .product-invoice-isdeleted {
        text-decoration: line-through;
    }

    .pagination {
        margin-top: 14px;
        margin-right: 5px;
    }
</style>
@if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage != "")
{
    <div class="alert alert-block alert-success">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-check green"></i>
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.FailedMessage != null && ViewBag.FailedMessage != "")
{
    <div class="alert alert-block alert-danger">
        <button class="close" data-dismiss="alert" type="button">
            <i class="ace-icon fa fa-times"></i>
        </button>
        <i class="ace-icon fa fa-warning red"></i>
        @ViewBag.FailedMessage
    </div>
}

<link href="@Url.Content("~/assets/css/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>

@helper GridColumnCommand(int id, string status)
{
    if (string.IsNullOrEmpty(status) == false && status.Equals(Wording.OrderStatus_pending))
    {
        <div class="hidden-phone visible-desktop action-buttons" style="display: inline-block; float: left;">
            <p>
                <button name="Delete" value="Delete" type="submit" class="btn btn-mini btn-danger">
                    <i class="ace-icon fa fa-trash bigger-120"></i>
                </button>
            </p>
        </div>
    }
}
@helper CollapseDetails(int Id)
{

    <a class="green show-details-btn" title="Show Details" data-id="@Id">
        <i class="ace-icon fa fa-angle-double-down bigger-120"></i>
    </a>
    @*<a href="@Url.Action("GetOrderDetailsByOrderId", "PurchaseOrder", new { Id = Id })">
            <i class="ace-icon fa fa-angle-double-down bigger-120"></i>
        </a>*@

}

@helper GridColumnName(string name, int id, string note, string reason)
{
    name = string.IsNullOrEmpty(name) ? "No Title" : name;
    <a href="@Url.Action("Detail", "PurchaseOrder", new { Id = id })">@name</a>

    if (!string.IsNullOrEmpty(note) || !string.IsNullOrEmpty(reason))
    {
        note = note + "; " + reason;
        <span class="help-button" data-rel="tooltip" data-placement="bottom" data-original-title="@note">?</span>
    }
}
@helper GridColumnStatus(string status)
{
    switch (status)
    {
        case "pending":
            <span class="label label-info pull-left" style="margin-right:5px">@Wording.OrderStatusDisplay_pending</span>
            break;
        case "inprogress":
            <span class="label label-warning pull-left" style="margin-right:5px">@Wording.OrderStatusDisplay_inprogress</span>
            break;
        case "shipping":
            <span class="label label-warning pull-left" style="margin-right:5px">@Wording.OrderStatusDisplay_shipping</span>
            break;
        case "complete":
            <span class="label label-success pull-left" style="margin-right:5px">@Wording.OrderStatusDisplay_complete</span>
            break;
        case "delete":
            <span class="label label-danger pull-left" style="margin-right:5px">@Wording.OrderStatusDisplay_delete</span>
            break;
    }
}

@helper CheckDeleteColumns(int Id)
{
    <label>
        <input class="ace class-delete-all" type="checkbox" name="DeleteId-checkbox" value="@Id">
        <span class="lbl"></span>
    </label>
}

@helper BuildCheckAll()
{
    <label>
        <input class="ace" type="checkbox" name="checkAll" id="checkAll" />
        <span class="lbl"></span>
    </label>
}




@using (Html.BeginPageHeaderContainer(pageSetting))
{
    <p>
        @Html.TextBox("txtCode", Request["txtCode"], new { autocomplete = "off", placeholder = "Nhập mã đơn hàng..." })
        <span class="input-daterange input-group">
            @Html.TextBox("startDate1", Request["startDate1"] != null ? Request["startDate1"] : "", new { autocomplete = "off", placeholder = "Ngày tạo từ..." })
            <span class="input-group-addon">
                <i class="fa fa-exchange"></i>
            </span>
            @Html.TextBox("endDate1", Request["endDate1"] != null ? Request["endDate1"] : "", new { autocomplete = "off", placeholder = "đến..." })
        </span>
        <span class="input-numberic input-group">
            @Html.TextBox("txtMinAmount", Request["txtMinAmount"] != null ? Request["txtMinAmount"] : "", new { @class = "input-numberic", autocomplete = "off", placeholder = "Tổng tiền từ..." })
            <span class="input-group-addon">
                <i class="fa fa-exchange"></i>
            </span>
            @Html.TextBox("txtMaxAmount", Request["txtMaxAmount"] != null ? Request["txtMaxAmount"] : "", new { @class = "input-numberic", autocomplete = "off", placeholder = "đến..." })
        </span>
        @Html.TextBox("txtSupplierName", Request["txtSupplierName"], new { autocomplete = "off", placeholder = "Nhập tên NCC..." })
        <select class="form-control" name="warehouseDestinationId">
            <option value="">- Kho đích đến -</option>
            @foreach (var item in warehouseList)
            {
                <option @(Request["warehouseDestinationId"] == item.Value ? "Selected" : "") value="@item.Value">@item.Text</option>
            }
        </select>
    </p>
    <p>
        @Html.TextBox("codeOrder", Request["codeOrder"], new { autocomplete = "off", placeholder = "Nhập mã chứng từ..." })
        <span class="input-daterange input-group">
            @Html.TextBox("startDate2", Request["startDate2"] != null ? Request["startDate2"] : "", new { autocomplete = "off", placeholder = "Ngày chứng từ từ..." })
            <span class="input-group-addon">
                <i class="fa fa-exchange"></i>
            </span>
            @Html.TextBox("endDate2", Request["endDate2"] != null ? Request["endDate2"] : "", new { autocomplete = "off", placeholder = "đến..." })
        </span>
    </p>
    @Html.TextBox("numberrowpage", Request["numberrowpage"], new { @class = "", id = "numberrowpage", style = "display: none" })
    @Html.TextBox("numberrowpage", Request["numberrowpage"], new { @class = "", id = "numberrowpage1", onchange = "myFunction()", autocomplete = "off", style = "width:30px;display: none ", placeholder = "Số lượng sản phẩm" })

}

@*@using (Html.BeginForm("Delete", "PurchaseOrder", FormMethod.Post))
    {*@

<div class="table-responsive">
    <div id="test">

        @Html.Grid(Model).Columns(columns =>
    {
        columns.Add().Titled("#").SetWidth(50).RenderValueAs(o =>
       {
       stt++;

       return @<text> @(stt + ((currentPage - 1) * numberOfItem)) </text>;

});
columns.Add().Titled("Chi tiết").SetWidth(10).Encoded(false).Sanitized(false).RenderValueAs(n => CollapseDetails(n.Id)).Css("text-center");
columns.Add().Titled(Wording.Status).SetWidth(100).Encoded(false).Sanitized(false).RenderValueAs(n => GridColumnStatus(n.Status));
columns.Add(u => u.CreatedDate).Titled(Wording.CreatedDate).SetWidth(130).Sanitized(false).Format("{0:dd/MM/yyyy HH:mm}");
columns.Add().Titled("Mã đơn hàng").Sortable(false).Encoded(false).Sanitized(false).RenderValueAs(u => GridColumnName(u.Code, u.Id, u.Note, u.CancelReason)).SetWidth(140);
columns.Add(u => u.TotalAmount).Titled(Wording.TotalAmount).Sortable(true).SetWidth(100).Sanitized(false).RenderValueAs(n => CommonSatic.ToCurrencyStr(n.TotalAmount, null)).Css("text-right");
columns.Add(u => u.CodeOrderRed).Titled(Wording.CodeOrderRed).Sanitized(false).SetWidth(120);
columns.Add(u => u.DateOrder).Titled(Wording.DateOrder).SetWidth(130).Sanitized(false).Format("{0:dd/MM/yyyy}");
columns.Add(u => u.SupplierName).Titled(Wording.Supplier).Sanitized(false).SetWidth(120);
columns.Add(u => u.WarehouseDestinationName).Titled(Wording.WarehouseDestination).Sanitized(false).SetWidth(120);
columns.Add().Titled("CT nhập kho").Encoded(false).Sanitized(false).RenderValueAs(n => string.Format("<a href=\"/ProductInbound/Detail/{0}\" target=\"_blank\">{1}</a>", n.ProductInboundId, n.ProductInboundCode)).SetWidth(120);
columns.Add(u => u.ModifiedDate).Titled(Wording.ModifiedDate).SetWidth(130).Sortable(true).Sanitized(false).Format("{0:dd/MM/yyyy HH:mm}");
columns.Add(u => u.IsArchive).Titled("TT ghi sổ").Encoded(false).Sanitized(false).RenderValueAs(n => (n.IsArchive ? "<span style=\"color:green\"><b>Đã ghi sổ</b></span>" : "<span style=\"color:red\"><b>Chưa ghi sổ</b></span>")).SetWidth(90).Sortable(true);

}).WithPaging(sopage)

        @*<div id="Details" class="table-responsive" style="display:none;">
                <table id="tableDetail" class="table table-striped grid-table">
                    <thead>
                        <tr>
                            <th class="grid-header">ID</th>
                            <th class="grid-header">Tên Sản Phẩm</th>
                            <th class="grid-header">SL</th>
                            <th class="grid-header">Đơn Giá</th>
                            <th class="grid-header">Loại</th>
                            <th class="grid-header">% CK</th>
                            <th class="grid-header">Trị giá chiết khấu</th>
                            <th class="grid-header">Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody id="listDetail">
                    </tbody>
                </table>
            </div>*@
    </div>
    <div class="container" style="margin-top: 6px;width: auto;background-color: #eff3f8;height: 60px;/* background-color: aqua; */">


        <div class="row">

            <div style="float:right;margin-right:20px;margin-top:14px">
                <label>Trang</label>
                <input id="trang" name="trang" type="text" style="width :50px; height: 27px" placeholder="@currentPage/@tongPage" />
                <label>Số dòng</label>
                <input id='SoTrang1' style="width :30px; height: 27px; border: 1px solid #D5D5D5" placeholder=@numberOfItem />
            </div>
        </div>


    </div>
</div>

<script>

    $('#test').find('table.table.table-striped.grid-table').first().attr('id', 'CTable');
    $('#test').find('table.table.table-striped.grid-table thead').first().attr('id', 'CTh');

</script>

<script src="~/Scripts/jquery.freezeheader.js"></script>
<script>
    $(document).ready(function () {
        $("#CTable").freezeHeader({ 'offset': '30px' });
    })
</script>

@using (Html.BeginButtonContainer(pageSetting))
{
    if (Erp.BackOffice.Filters.SecurityFilter.AccessRight("Create", "PurchaseOrder", "Sale"))
    {
        <a class="btn btn-mini btn-primary" href="@Url.Action("Create", pageSetting.ModuleName)">
            <i class="ace-icon fa fa-plus"></i>
            @Wording.CreateNew
        </a>
    }
}
@*}*@



<!-- Modal form thay đổi trạng thái -->
<div id="order_status_modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <form class="modal-content" action="@Url.Action("UpdateStatus", "PurchaseOrder")" method="post">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thay đổi trạng thái cho đơn hàng có mã: <span id="order_code_popup"></span></h4>
            </div>
            <div class="modal-body">
                <div class="form-group clearfix">
                    <label class="col-sm-4">Trạng thái</label>
                    <div class="col-sm-8">
                        <select id="order_status" name="Status">
                            <option value="pending">Đang chờ</option>
                            <option value="outbound pending">Chờ xuất kho</option>
                            @*<option value="outbound done">Đã xuất kho</option>*@
                            <option value="shipping">Đang giao hàng</option>
                            <option value="complete">Hoàn thành</option>
                            <option value="cancel">Hủy</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" value="" name="Id" id="order_id" />
                <button type="submit" class="btn btn-success">Lưu</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </form>

    </div>
</div>
<!-- Modal -->
@section Scripts {
    <script>
        $(".grid-footer").css({ "float": "right", "width": "auto" });
    </script>
    <script type="text/javascript">
        function myFunction() {
            var x = document.getElementById("numberrowpage1").value;
            document.getElementById("numberrowpage").value = x;
            setCookie("NUMBERROW_INVOICE_CookieName", x, 100);

        }
    </script>
    <script type="text/javascript">
        //Bind keypress event to textbox
        $('#trang').keypress(function(event){
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                var x = document.getElementById('trang').value;
            var url = window.location.href;

            if (url.includes("?grid-page=" +@currentPage) || url.includes("&grid-page=" +@currentPage)) {
                var url = url.replace("grid-page=" +@currentPage, "grid-page=" + x);
            }
            else {
                if (!url.includes("grid-page=") && url.includes("?")) {
                    var url = url + "&grid-page=" + x;
                }
                else {
                    var url = url + "?grid-page=" + x;
                }
            }
            window.location.href = url;
            }

        });
         $('#SoTrang1').keypress(function(event){
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                var SoTrang1 = $("#SoTrang1").val();

          $("#SoTrang1").val(SoTrang1);
            $('#numberrowpage1').val(SoTrang1);
           $('#numberrowpage').val(SoTrang1);
           $('#numberrowpage1').trigger('change');
            $('#numberrowpage').trigger('change');
            location.reload();
            }

         });
         $(document).ready(function () {

            var strVal = getCookie("NUMBERROW_INVOICE_CookieName");
            //alert(strVal);
            $('#numberrowpage').val(strVal);
            $('#numberrowpage1').val(strVal);

        });
        //$('#SoTrang1').keyup(function (e) {
        //    var SoTrang1 = $("#SoTrang1").val();

        //  $("#SoTrang1").val(SoTrang1);
        //    $('#numberrowpage1').val(SoTrang1);
        //   $('#numberrowpage').val(SoTrang1);
        //   $('#numberrowpage1').trigger('change');
        //    $('#numberrowpage').trigger('change');
        //    location.reload();
        //});
    </script>
    <script type="text/javascript">

        //$('.show-details-btn').on('click', function (e) {
        //    e.preventDefault();
        //    $(this).closest('tr').next().toggleClass('open');
        //    $(this).find(ace.vars['.icon']).toggleClass('fa-angle-double-down').toggleClass('fa-angle-double-up');
        //});

        function CheckIsval() {
            if ($('[name="DeleteId-checkbox"]').is(':checked') == false) {
                alert("Phải chọn ít nhất 1 item.");
                return false;
            }
            else {
                if (confirm('Bạn có chắc muốn xóa các item đã chọn ?')) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }

        $('[name="Delete"]').click(function () {
            if (confirm('Bạn có chắc muốn xóa item ?')) {
                $(this).closest('tr').children('td').each(function (i, e) {
                    $(this).find("input.class-delete-all").prop("checked", true);
                    return true;
                })
            }
            else {
                return false;
            }

        })

        //mở form thay đổi trạng thái
        function popupChangeOrderStatus(status, orderId, code, event) {
            event.preventDefault();
            $('#order_code_popup').text(code);
            $('#order_id').val(orderId);
            var option = $('#order_status option[text="' + status + '"]');
            console.log(option);
            $('#order_status').val(status);
            $('#order_status_modal').modal({ backdrop: 'static' });
        }

    </script>
    <script>
        //$('.show-details-btn').bind('click', function () {
        //    $(this).closest('tr').after('<tr><td>new td<td></tr>');
        //});
        //format currency
        var format = function (num) {
            var str = num.toString().replace("$", ""), parts = false, output = [], i = 1, formatted = null;
            if (str.indexOf(".") > 0) {
                parts = str.split(".");
                str = parts[0];
            }
            str = str.split("").reverse();
            for (var j = 0, len = str.length; j < len; j++) {
                if (str[j] != ".") {
                    output.push(str[j]);
                    if (i % 3 == 0 && j < (len - 1)) {
                        output.push(".");
                    }
                    i++;
                }
            }
            formatted = output.reverse().join("");
            return (formatted + ((parts) ? "." + parts[1].substr(0, 2) : ""));
        };
        // end format currency

        $(".show-details-btn").on("click", function (e) {
            var orderId = $(this).data("id");
            var clicks = $(this).data('clicks');
            if (clicks) {
                $("#Details-" + orderId).remove();
            } else {

                console.log(orderId);
                e.preventDefault();
                //get load detail order
                $.ajax({
                    url: '/PurchaseOrder/GetListJsonOrderDetailById/' + orderId,
                    dataType: "json",
                    type: "GET",
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    success: function (data) {
                        console.log(data);
                        var trHTML = '';
                        trHTML += '<tr id="Details-' + orderId + '" class="open" >';
                        trHTML += '<td colspan="11">';
                        trHTML += '<div class="table-detail clearfix">'
                        trHTML += '<div class="row">';
                        trHTML += ' <table id="tableDetail" class="table table-striped grid-table">';
                        trHTML += ' <thead>';
                        trHTML += ' <tr><th class="grid-header">ID</th> <th class="grid-header">Tên Sản Phẩm</th><th class="grid-header">SL</th><th class="grid-header">Đơn Giá</th><th class="grid-header">Loại</th> <th class="grid-header">% CK</th> <th class="grid-header">Trị giá chiết khấu</th><th class="grid-header">Thành tiền</th></tr> ';
                        trHTML += ' <tbody id="listDetail">';
                        $.each(data, function (i, item) {
                            trHTML += '<tr class="grid-row"><td class="grid-cell">' + item.Id + '</td><td class="grid-cell">' + item.ProductName + '</td></td><td class="grid-cell">' + item.Quantity + '</td><td lass="grid-cell">' + format(item.Price) + '</td><td lass="grid-cell">' + item.Unit + '</td><td lass="grid-cell">' + item.DisCount + '</td><td lass="grid-cell">' + format(item.DisCountAmount) + '</td><td lass="grid-cell">' + format(item.Quantity * item.Price - item.DisCountAmount) + '</td></tr>';
                        });
                        trHTML += '</tbody>';
                        trHTML += '</table>';
                        trHTML += '</div>';
                        trHTML += '</div>';
                        trHTML += '</td>';
                        trHTML += '</tr>';
                        //$('#tableDetail tbody').append(trHTML);

                        $('.grid-row-selected').closest('.grid-row-selected').after(trHTML);

                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            }
            $(this).data("clicks", !clicks);




        })
    </script>
    @Html.ScriptBottom_ValidationMvc()
    @Html.ScriptBottom_DatePicker("dd/MM/yyyy")
}
